name: CD (Main Deploy)

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_LATEST: ghcr.io/${{ github.repository }}:latest
  IMAGE_SHA: ghcr.io/${{ github.repository }}:${{ github.sha }}
  BUILD_CACHE: ghcr.io/${{ github.repository }}:buildcache

jobs:
  build-and-push:
    # 다른 이벤트로 불려도 main push만 진행
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build & Push with remote cache
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          provenance: false
          tags: |
            ${{ env.IMAGE_LATEST }}
            ${{ env.IMAGE_SHA }}
          build-args: |
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY }}
            NEXT_PUBLIC_SITE_URL=${{ secrets.NEXT_PUBLIC_SITE_URL }}
          cache-from: |
            type=registry,ref=${{ env.BUILD_CACHE }}
          cache-to: |
            type=registry,ref=${{ env.BUILD_CACHE }},mode=max

      - name: Upload deploy assets to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml,Caddyfile,deploy.sh,.env.production"
          target: "/home/ubuntu/soomtong/"
          overwrite: true

      - name: Run deploy.sh on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            cd /home/ubuntu/soomtong
            command -v dos2unix >/dev/null 2>&1 && dos2unix deploy.sh || true
            chmod +x deploy.sh
            ./deploy.sh
